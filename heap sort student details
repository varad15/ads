#include <stdio.h>
#include <string.h>

// Define the Student structure
typedef struct {
    char student_name[50];
    int student_roll_no;
    float total_marks;
} Student;

// Function to swap two Student structures
void swap(Student* a, Student* b, int* swap_count) {
    Student temp = *a;
    *a = *b;
    *b = temp;
    (*swap_count)++;
}

// Function to heapify a subtree rooted with node i which is an index in arr[]
void heapify(Student arr[], int n, int i, int* swap_count) {
    int largest = i;   // Initialize largest as root
    int left = 2 * i + 1;  // left child
    int right = 2 * i + 2; // right child

    // If left child is larger than root
    if (left < n && arr[left].student_roll_no > arr[largest].student_roll_no) {
        largest = left;
    }

    // If right child is larger than largest so far
    if (right < n && arr[right].student_roll_no > arr[largest].student_roll_no) {
        largest = right;
    }

    // If largest is not root
    if (largest != i) {
        swap(&arr[i], &arr[largest], swap_count);
        // Recursively heapify the affected sub-tree
        heapify(arr, n, largest, swap_count);
    }
}

// Function to perform heap sort
void heapSort(Student arr[], int n, int* swap_count) {
    // Build heap (rearrange array)
    for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(arr, n, i, swap_count);
    }

    // One by one extract an element from heap
    for (int i = n - 1; i >= 0; i--) {
        // Move current root to end
        swap(&arr[0], &arr[i], swap_count);

        // call max heapify on the reduced heap
        heapify(arr, i, 0, swap_count);
    }
}

// Function to print the array of Students
void printStudents(Student arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("Student Name: %s, Student Roll No: %d, Total Marks: %.2f\n", arr[i].student_name, arr[i].student_roll_no, arr[i].total_marks);
    }
}

int main() {
    int n;
    printf("Enter the number of students: ");
    scanf("%d", &n);

    Student students[n];
    int swap_count = 0;

    // Input student details
    for (int i = 0; i < n; i++) {
        printf("Enter details for student %d\n", i + 1);
        printf("Student Name: ");
        scanf("%s", students[i].student_name);
        printf("Student Roll No: ");
        scanf("%d", &students[i].student_roll_no);
        printf("Total Marks: ");
        scanf("%f", &students[i].total_marks);
    }

    // Perform Heap Sort
    heapSort(students, n, &swap_count);

    // Print sorted students
    printf("\nSorted Student List:\n");
    printStudents(students, n);

    // Print number of swaps performed
    printf("\nNumber of swaps performed: %d\n", swap_count);

    return 0;
}
