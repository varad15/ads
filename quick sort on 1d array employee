#include <stdio.h>
#include <string.h>

// Define the Employee structure
typedef struct {
    char employee_name[50];
    int emp_no;
    float emp_salary;
} Employee;

// Function to swap two Employee structures
void swap(Employee* a, Employee* b, int* swap_count) {
    Employee temp = *a;
    *a = *b;
    *b = temp;
    (*swap_count)++;
}

// Partition function for Quick Sort
int partition(Employee arr[], int low, int high, int* swap_count) {
    int pivot = arr[high].emp_no; // Pivot element is the emp_no of the high element
    int i = low - 1; // Index of the smaller element

    for (int j = low; j < high; j++) {
        if (arr[j].emp_no < pivot) {
            i++;
            swap(&arr[i], &arr[j], swap_count);
        }
    }
    swap(&arr[i + 1], &arr[high], swap_count);
    return i + 1;
}

// Quick Sort function
void quickSort(Employee arr[], int low, int high, int* swap_count) {
    if (low < high) {
        int pi = partition(arr, low, high, swap_count);

        quickSort(arr, low, pi - 1, swap_count);
        quickSort(arr, pi + 1, high, swap_count);
    }
}

// Function to print the array of Employees
void printEmployees(Employee arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("Employee Name: %s, Employee Number: %d, Employee Salary: %.2f\n", arr[i].employee_name, arr[i].emp_no, arr[i].emp_salary);
    }
}

int main() {
    int n;
    printf("Enter the number of employees: ");
    scanf("%d", &n);

    Employee employees[n];
    int swap_count = 0;

    // Input employee details
    for (int i = 0; i < n; i++) {
        printf("Enter details for employee %d\n", i + 1);
        printf("Employee Name: ");
        scanf("%s", employees[i].employee_name);
        printf("Employee Number: ");
        scanf("%d", &employees[i].emp_no);
        printf("Employee Salary: ");
        scanf("%f", &employees[i].emp_salary);
    }

    // Perform Quick Sort
    quickSort(employees, 0, n - 1, &swap_count);

    // Print sorted employees
    printf("\nSorted Employee List:\n");
    printEmployees(employees, n);

    // Print number of swaps performed
    printf("\nNumber of swaps performed: %d\n", swap_count);

    return 0;
}
